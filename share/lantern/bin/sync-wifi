#!/bin/bash

if [[ $UID != 0 ]]; then
    echo "Please run this script with sudo:"
    echo "sudo $0 $*"
    exit 1
fi

# search phrase to identify valid devices nearby
SSID_MATCH="LANTERN"

# log file to record activity while device wifi network is momentarily offline
LOGFILE="/opt/lantern/logs/pollinate.log"

touch $LOGFILE


#-----------------------------------------------------------------------------
##
# Start Sync for All Nearby Lanterns
# @todo don't shut down wlan0 before scanning
# @todo pick the strongest LANTERN_INTERNET nearby and sync to that first, to get latest before pollinating
##
start() {
  
  list=`macs ${SSID_MATCH}`

  for mac_addr in $list; do
    echo "sync target = $mac_addr"
  done


  if [ -z "$list" ]; then
    echo "skipping sync since no devices in list to sync..."
  else

    echo "----------------- Pollinate Start ------------------" >> $LOGFILE 2>&1

    echo "taking access point offline for sync..."

    # stop any existing usage for wlan0 interface
    systemctl stop ap

    sleep 5

    for mac_addr in $list; do
      register $mac_addr
      sync $mac_addr multi
    done

    echo "----------------- Pollinate Stop ------------------" >> $LOGFILE 2>&1

    systemctl start ap
  fi
  
}


register() {
  mac_addr=$1

  if [ -z "$mac_addr" ]; then
    echo "please provide MAC Address..."
    exit
  fi

  netctl disable pollinate

  path="/etc/netctl/pollinate"

  if [[ -f $path ]]; then
    rm $path
  fi
  

  touch $path
  cat <<EOF >"$path"
Description="Lantern - Pollinate Mode"
Interface=wlan0
Connection=wireless
Security=none
IP=dhcp
AP=${mac_addr}
EOF
  echo "$path:"
  cat $path
  netctl enable pollinate
}

##
# Start sync with pre-defined Lantern from register()
##
sync() {


  mac_addr=$1
  do_multi=$2

  echo "Going offline to sync ${mac_addr}..."

 if [[ -z "$do_multi" ]]; then
    # stop any existing usage for wlan0 interface
    systemctl stop ap
    sleep 3
  fi


  echo "========== Sync ${mac_addr} ==========" >> $LOGFILE 2>&1

  # connect to wireless network
  netctl start pollinate >> $LOGFILE 2>&1
  sleep 3


  # check network
  ip neigh >> $LOGFILE 2>&1


  sleep 3

  # do the sync
  curl -s -X POST http://localhost/sync/ >> $LOGFILE 2>&1

  # disconnect
  netctl stop pollinate >> $LOGFILE 2>&1
  sleep 3

  echo "========== Stop ${mac_addr} ==========" >> $LOGFILE 2>&1



  # if we're running this command stand-alone, bring back access point afterwards
  if [[ -z "$do_multi" ]]; then
      systemctl start ap
  fi

}

###
# Discover MAC addresses of nearby wireless devices for airing
# @todo allow for custom SSID values
###
macs() {
  ssid=${1:-$SSID_MATCH}
  iw wlan0 scan | grep "wlan0\|SSID:\|signal" | paste - - - | grep "^BSS" | grep -v associated | sort -u -k3 | grep $ssid | cut -c 5-21
}


###
# Help Display
###
help() {
  echo "Please choose between commands: start, register, sync, macs"
}


#-----------------------------------------------------------------------------
until
    cmd=$1
    if [ -z "$cmd" ]; then
        help
    fi
    shift 1
    $cmd "$@"
    [ "$?" -ne 127 ]
do
    help
    exit
done
